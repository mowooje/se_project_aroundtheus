!function(){"use strict";class e{constructor(e,t,s){this._data=e,this._cardSelector=t,this._handleImageClick=s}_setEventListeners(){this._cardElement.querySelector("#card__like-button").addEventListener("click",(()=>{this._handleLikeIcon()})),this._cardElement.querySelector("#card__trash-button").addEventListener("click",(()=>{this._handleDeleteButton()})),this._cardElement.querySelector("#card-image").addEventListener("click",(()=>{this._handleImageClick(this._data)}))}_handleDeleteButton(){this._cardElement.remove(),this._cardElement=null}_handleLikeIcon(){this._cardElement.querySelector("#card__like-button").classList.toggle("card__like-button_active")}getView(){this._cardElement=document.querySelector(this._cardSelector).content.querySelector(".card").cloneNode(!0);const e=this._cardElement.querySelector("#card-image"),t=this._cardElement.querySelector("#card-title");return e.src=this._data.link,e.alt=this._data.name,t.textContent=this._data.name,this._setEventListeners(),this._cardElement}}class t{constructor(e,t){this._inputSelector=e.inputSelector,this._submitButtonSelector=e.submitButtonSelector,this._inactiveButtonClass=e.inactiveButtonClass,this._inputErrorClass=e.inputErrorClass,this._errorClass=e.errorClass,this._form=t}_showInputError(e){this.errorMessageEl=this._form.querySelector(`#${e.id}-error`),e.classList.add(this._inputErrorClass),this.errorMessageEl.textContent=e.validationMessage,this.errorMessageEl.classList.add(this._errorClass)}_hideInputError(e){this.errorMessageEl=this._form.querySelector(`#${e.id}-error`),e.classList.remove(this._inputErrorClass),this.errorMessageEl.textContent=e.validationMessage,this.errorMessageEl.classList.remove(this._errorClass)}_checkInputValidity(e){e.validity.valid?this._hideInputError(e):this._showInputError(e)}_hasInvalidInput(){return this._inputEls.some((e=>!e.validity.valid))}_enableButton(){this._submitButton.classList.remove(this._inactiveButtonClass),this._submitButton.disabled=!1}disableButton(){this._submitButton.classList.add(this._inactiveButtonClass),this._submitButton.disabled=!0}toggleButtonState(){this._hasInvalidInput()?this.disableButton():this._enableButton()}_setEventListeners(){this._inputEls=Array.from(this._form.querySelectorAll(this._inputSelector)),this._submitButton=this._form.querySelector(this._submitButtonSelector),this._inputEls.forEach((e=>{e.addEventListener("input",(t=>{this._checkInputValidity(e),this.toggleButtonState()}))}))}enableValidation(){this._setEventListeners(),this._form.addEventListener("submit",(e=>{e.preventDefault(),this.disableButton()})),this.toggleButtonState()}resetValidation(){this.toggleButtonState(),this._inputEls.forEach((e=>{this._hideInputError(e)}))}}class s{constructor(e){let{popupSelector:t}=e;this._popUpElement=document.querySelector(t),this._closeButton=this._popUpElement.querySelector(".modal__close"),this.close=this.close.bind(this)}open(){this._popUpElement.classList.add("modal_opened"),document.addEventListener("keydown",this._handleEscapeKey),document.addEventListener("mousedown",this._handleOutsideClick)}close(){this._popUpElement.classList.remove("modal_opened"),document.removeEventListener("keydown",this._handleEscapeKey),document.removeEventListener("mousedown",this._handleOutsideClick)}_handleEscapeKey=e=>{"Escape"===e.key&&this.close()};_handleOutsideClick=e=>{e.target.classList.contains("modal")&&this.close()};setEventListeners(){this._closeButton.addEventListener("click",(()=>{this.close()}))}}class i extends s{constructor(e,t,s){super({popupSelector:e}),this._popup=document.querySelector(e),this._handleFormSubmit=t,this._config=s,this._form=this._popup.querySelector(this._config.formSelector),this.inputEl=this._popUpElement.querySelectorAll(".modal__input"),this.inputValues=document.querySelectorAll(this._config.inputSelector)}setEventListeners(){super.setEventListeners(),this._form.addEventListener("submit",(e=>{e.preventDefault(),this._handleFormSubmit(this._getInputValues()),this._form.reset()}))}_getInputValues(){return this.inputValues={},this.inputEl.forEach((e=>{this.inputValues[e.name]=e.value})),this.inputValues}setInputValues(e){this.inputValues.forEach((t=>{t.value=e[t.name]}))}}const n={formSelector:".modal__form",inputSelector:".modal__input",submitButtonSelector:".modal__button",inactiveButtonClass:"modal__button_disabled",inputErrorClass:"modal__form_input_error",errorClass:"modal__error_visible"},r=document.querySelector("#profile-edit-button"),o=document.querySelector("#profile-edit-modal"),a=(document.querySelector(".profile__title"),document.querySelector(".profile__description"),document.querySelector("#profile-title-input")),l=document.querySelector("#profile-description-input"),c=o.querySelector(".modal__form"),u=(document.querySelector("#card-template").content.firstElementChild,document.querySelector(".cards__list"),document.querySelector(".profile__add-button")),d=document.querySelector(".modal__card-form"),_=(document.querySelector("#add-card-modal"),document.querySelector(".modal__preview-image"),document.querySelector(".modal__preview-description"),"#card-template"),h=new class{constructor(e){let{profileTitle:t,profileDescription:s}=e;this._title=document.querySelector(t),this._description=document.querySelector(s)}getUserInfo(){return this._userInfo={title:this._title.textContent,description:this._description.textContent},this._userInfo}setUserInfo(e){this._title.textContent=e.title,this._description.textContent=e.description}}({profileTitle:".profile__title",profileDescription:".profile__description"});u.addEventListener("click",(()=>{f.open()})),r.addEventListener("click",(()=>{a.value=h.getUserInfo().title,l.value=h.getUserInfo().title,E.open()}));const m=new t(n,c),p=new t(n,d);m.enableValidation(),p.enableValidation();const E=new i("#profile-edit-modal",(function(e){h.setUserInfo(e),E.close()}),n),f=new i("#add-card-modal",(function(e){const t=g({name:e.name,link:e.link});y.addItem(t),f.close()}),n);function S(e,t){v.open(e,t)}E.setEventListeners(),f.setEventListeners();const v=new class extends s{constructor(e){super({popupSelector:e}),this._image=this._popUpElement.querySelector(".modal__preview-image"),this._caption=this._popUpElement.querySelector(".modal__preview-description")}open(e){this._image.src=e.link,this._image.alt=e.name,this._caption.textContent=e.name,super.open()}}("#modal-preview");function g(t){return new e(t,_,S).getView()}v.setEventListeners();const y=new class{constructor(e,t){let{items:s,renderer:i}=e;this._items=s,this._renderer=i,this._container=document.querySelector(t)}renderItems(){this._items.forEach((e=>{const t=this._renderer(e);this._container.append(t)}))}addItem(e){this._container.prepend(e)}}({items:[{name:"Yosemite Valley",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/yosemite.jpg"},{name:"Lake Louise",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/lake-louise.jpg"},{name:"Bald Mountains",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/bald-mountains.jpg"},{name:"Latemar",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/latemar.jpg"},{name:"Vanoise National Park",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/vanoise.jpg"},{name:"Lago di Braies",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/lago.jpg "}],renderer:g},".cards__list");y.renderItems()}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,